name: build-sunchirp-os
on:
  workflow_dispatch:
env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: sunchirp-os
  BASE_IMAGE: quay.io/fedora-ostree-desktops/silverblue
  BASE_VERSION: 39
  #quay.io/fedora-ostree-desktops/silverblue:39
  #docker.io/library/ubuntu:22.04

jobs:
  push-ghcr:
    name: SunChirp
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Maximize GitHub Runner Build Space
        if: ${{ runner.name }}
        uses: ublue-os/remove-unwanted-software@v6

      - name: Install Missing Dependencies for Local ACT Runner
        if: ${{ ! runner.name }}
        run: |
          apt update
          apt install buildah skopeo -y

      - name: Checkout "Push to Registry" Action
        uses: actions/checkout@v4

      - name: Generate Tags
        id: generate-tags
        shell: bash
        run: |
          # Generate a timestamp for creating an image version history
          TIMESTAMP="$(date +%Y%m%d)"

          MAJOR_VERSION="${{ env.UBUNTU_VERSION }}"
          COMMIT_TAGS=()
          BUILD_TAGS=()

          # Have tags for tracking builds during pull request
          SHA_SHORT="${GITHUB_SHA::7}"

          # Using clever bash string templating, https://stackoverflow.com/q/40771781
          # don't make malformed tags if $MAJOR_VERSION is empty (base-image didn't include proper labels) --
          COMMIT_TAGS+=("pr-${{ github.event.number }}${MAJOR_VERSION:+-$MAJOR_VERSION}")
          COMMIT_TAGS+=("${SHA_SHORT}${MAJOR_VERSION:+-$MAJOR_VERSION}")

          echo -e "\nGenerated the following commit tags:"
          for TAG in "${COMMIT_TAGS[@]}"; do
              echo "${TAG}"
          done
          echo "commit_tags=${alias_tags[*]}" >> $GITHUB_OUTPUT

          BUILD_TAGS=("${MAJOR_VERSION}" "${MAJOR_VERSION:+$MAJOR_VERSION-}${TIMESTAMP}")
          BUILD_TAGS+=("${TIMESTAMP}")
          BUILD_TAGS+=("latest")
          alias_tags=("${BUILD_TAGS[@]}")

          echo -e "\nGenerated the following build tags:"
          for TAG in "${BUILD_TAGS[@]}"; do
              echo "${TAG}"
          done
          echo "alias_tags=${alias_tags[*]}" >> $GITHUB_OUTPUT

      - name: Get Current Docker Image Version
        id: labels
        run: |
          ver=$(skopeo inspect docker://${{ env.BASE_IMAGE }}:${{ env.BASE_VERSION }} | jq -r '.Labels["org.opencontainers.image.version"]')
          echo "VERSION=$ver" >> $GITHUB_OUTPUT

      - name: Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.version=${{ steps.labels.outputs.VERSION }}
            org.opencontainers.image.description=Chirp Chirp
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/main/README.md
            io.artifacthub.package.logo-url=https://avatars.githubusercontent.com/u/151464120?s=200&v=4

      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./Containerfile
          image: ${{ env.IMAGE_NAME }}
          tags: |
            ${{ steps.generate-tags.outputs.alias_tags }}
          build-args: |
            IMAGE_NAME=${{ github.event.repository.name }}
            BASE_IMAGE=${{ env.BASE_IMAGE }}
            BASE_VERSION=${{ env.BASE_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
          oci: false

      # Workaround bug where capital letters in your GitHub username make it impossible to push to GHCR.
      # https://github.com/macbre/push-to-ghcr/issues/12
      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}

      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        if: github.event_name != 'pull_request'
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ steps.registry_case.outputs.lowercase }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --disable-content-trust

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Sign container
      - uses: sigstore/cosign-installer@v3.2.0
        if: github.event_name != 'pull_request'

      - name: Sign container image
        if: github.event_name != 'pull_request'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ steps.registry_case.outputs.lowercase }}/${{ steps.build_image.outputs.image }}@${TAGS}
        env:
          TAGS: ${{ steps.push.outputs.digest }}
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}

      - name: Echo outputs
        if: github.event_name != 'pull_request'
        run: |
          echo "${{ toJSON(steps.push.outputs) }}"

  check:
    name: Check all builds successful
    runs-on: ubuntu-latest
    needs: [push-ghcr]
    steps:
      - name: Exit
        shell: bash
        run: exit 0
